STATE OF THE PROGRAM NOW:
    The current state of the program allows the user to send a prompt to llama3.2 from Ollama using an API. 
    It is in a text input element and sent with a button which disappears when you press enter or the button. 
    It then changes the text where it says "Text will appear here" with the response from llama3.2 model. 
    After that, it shows the textarea where you can start typing and when the first key is pressed it starts the timer. 
    Once the timer is up, the textarea will be disabled and in the console, it will show what text you managed to type. 
    There will also be a button to try another prompt at the bottom which will make the prompt elements reappear.
    There are three stats that will be shown at the bottom when the timer is up: WPM, Errors, and Accuracy. These are also in the console.
    The accuracy and errors are off if you manage to completely miss a word so I am not sure if I can fix that problem.


FEATURES TO ADD:

    (Will probably push this to a different branch to work on the accuracy problem where the words don't compare 1:1 causing bad accuracy if one word is missed or too many words are typed)
    - Remove the saved prompts in the input box
    - Add a "waiting for response" which appears when send prompt is clicked and disappears when response is displayed
    - Make the words "You have __ seconds to type" appear after the response is received using the hidden class
    - Make text-to-be-typed all bunched up with no new lines or extra tabs
    - Make text-to-be-typed look better all around and same with the words-typed
    - Add focus to elements when needed
    - Make buttons look nicer

WINDOWS ENV <env_name> == typingEnv
    - ``python –m venv <env_name>`` (creates an environment in venv) 
    - ``source <env_name>/Scripts/activate`` (activate the your venv) 
    - `` deactivate``  (to deactivate venv) 
    - ``rm –rf <env_name>`` (deletes the venv)